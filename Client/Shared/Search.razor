@inject NavigationManager NavigationManager
@inject IProductService ProductService

<div class="search-container" style="display: flex; align-items: center; flex-grow: 1; max-width: 300px; margin-left: 1rem;">
    <input type="search" list="products" class="form-control" placeholder="Search..." style="flex-grow: 1;"
           @bind-value="searchText"
           @bind-value:event="oninput"
           @onkeyup="HandleSearch"
           @ref="searchInput">
        <datalist id="products">
            @foreach (var suggestion in suggestions)
            {
                <option>@suggestion</option>
            }
        </datalist>
    <div class="input-group-append" style="margin-left: 0.5rem;">
        <button class="btn btn-primary" style="margin-left: -1px;" @onclick="SearchProducts">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div>
</div>

    @*<div class="search-container" style="flex-grow: 1; max-width: 300px; margin-left: 1rem;">
        <input @bind-value="searchText"
               @bind-value:event="oninput"
               type="search"
               list="products"
               @onkeyup="HandleSearch"
               class="form-control"
               placeholder="Search..."
               @ref="searchInput" />
        <datalist id="products">
            @foreach (var suggestion in suggestions)
            {
                <option>@suggestion</option>
            }
        </datalist>
        <div class="input-group-append">
            <button class="btn btn-primary" @onclick="SearchProducts">
                <span class="oi oi-magnifying-glass"></span>
            </button>
        </div>
    </div>*@
    @*<div class="input-group" style="width=300px">

        </div>*@

    @code {
        private string searchText = string.Empty;
        private List<string> suggestions = new List<string>();
        protected ElementReference searchInput;

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                await searchInput.FocusAsync();
            }
        }

        public void SearchProducts()
        {
            NavigationManager.NavigateTo($"search/{searchText}/1");
        }

        public async Task HandleSearch(KeyboardEventArgs args)
        {
            if (args.Key == null || args.Key.Equals("Enter"))
            {
                SearchProducts();
            }
            else if (searchText.Length > 1)
            {
                suggestions = await ProductService.GetProductSearchSuggestions(searchText);
            }
        }
    }
